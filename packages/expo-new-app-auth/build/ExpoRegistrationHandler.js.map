{"version":3,"file":"ExpoRegistrationHandler.js","sourceRoot":"","sources":["../src/ExpoRegistrationHandler.ts"],"names":[],"mappings":"AAGA,OAAO,EACL,mBAAmB,EACnB,mBAAmB,EACnB,oBAAoB,GACrB,MAAM,uBAAuB,CAAC;AAc/B,MAAM,OAAO,wBAAyB,SAAQ,oBAAoB;IAChE,YAAY,OAAqC;QAC/C,KAAK,CAAC;YACJ,mBAAmB,EAAE,OAAO,CAAC,gBAAgB;YAC7C,wBAAwB,EAAE,OAAO,CAAC,qBAAqB;YACvD,SAAS,EAAE,OAAO,CAAC,QAAQ;YAC3B,aAAa,EAAE,OAAO,CAAC,YAAY;YACnC,yBAAyB,EAAE,OAAO,CAAC,uBAAuB;YAC1D,uBAAuB,EAAE,OAAO,CAAC,qBAAqB;YACtD,MAAM,EAAE,OAAO,CAAC,MAAM;SACvB,CAAC,CAAC;IACL,CAAC;CACF;AAqCD,MAAM,OAAO,uBAAwB,SAAQ,mBAAmB;IAC9D,YAAY,OAAoC;QAC9C,KAAK,CAAC;YACJ,aAAa,EAAE,OAAO,CAAC,YAAY;YACnC,cAAc,EAAE,OAAO,CAAC,aAAa;YACrC,WAAW,EAAE,OAAO,CAAC,UAAU;YAC/B,YAAY,EAAE,OAAO,CAAC,WAAW;YACjC,0BAA0B,EAAE,OAAO,CAAC,uBAAuB;YAC3D,oBAAoB,EAAE,OAAO,CAAC,kBAAkB;YAChD,MAAM,EAAE,OAAO,CAAC,MAAM;SACvB,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,OAAO,uBAAwB,SAAQ,mBAAmB;CAAG","sourcesContent":["import { StringMap } from '@openid/appauth';\n\nimport GrantType from './GrantType';\nimport {\n  RegistrationHandler,\n  RegistrationRequest,\n  RegistrationResponse,\n} from './RegistrationHandler';\n\n// A custom module built to replicate the native dynamic register functionality\n\nexport type ExpoRegistrationResponseJson = {\n  clientIdIssuedAt: number;\n  clientSecretExpiresAt: number;\n  clientId: string;\n  clientSecret: string;\n  registrationAccessToken: string;\n  registrationClientUri: string;\n  extras: StringMap;\n};\n\nexport class ExpoRegistrationResponse extends RegistrationResponse {\n  constructor(options: ExpoRegistrationResponseJson) {\n    super({\n      client_id_issued_at: options.clientIdIssuedAt,\n      client_secret_expires_at: options.clientSecretExpiresAt,\n      client_id: options.clientId,\n      client_secret: options.clientSecret,\n      registration_access_token: options.registrationAccessToken,\n      registration_client_uri: options.registrationClientUri,\n      extras: options.extras,\n    });\n  }\n}\n\nexport interface ExpoRegistrationRequestJson {\n  /**\n   * Client's redirect URI's\n   *\n   * https://tools.ietf.org/html/rfc6749#section-3.1.2\n   */\n  redirectUris: string[];\n  /**\n   * Response types to use.\n   *\n   * [OpenID Connect Core 1.0, Section 3](https://openid.net/specs/openid-connect-core-1_0.html#rfc.section.3)\n   */\n  responseTypes: string[];\n  /**\n   * Grant types to use.\n   *\n   * [OpenID Connect Dynamic Client Registration 1.0, Section 2](https://openid.net/specs/openid-connect-discovery-1_0.html#rfc.section.2)\n   */\n  grantTypes: GrantType[];\n  /**\n   * Subject type to use.\n   *\n   * [OpenID Connect Core 1.0, Section 8](https://openid.net/specs/openid-connect-core-1_0.html#rfc.section.8)\n   */\n  subjectType?: string;\n  /**\n   * Client auth method to use at the token endpoint.\n   *\n   * [OpenID Connect Core 1.0, Section 9](https://openid.net/specs/openid-connect-core-1_0.html#rfc.section.9)\n   */\n  tokenEndpointAuthMethod?: string;\n  initialAccessToken?: string;\n  extras?: Record<string, any>;\n}\n\nexport class ExpoRegistrationRequest extends RegistrationRequest {\n  constructor(options: ExpoRegistrationRequestJson) {\n    super({\n      redirect_uris: options.redirectUris,\n      response_types: options.responseTypes,\n      grant_types: options.grantTypes,\n      subject_type: options.subjectType,\n      token_endpoint_auth_method: options.tokenEndpointAuthMethod,\n      initial_access_token: options.initialAccessToken,\n      extras: options.extras,\n    });\n  }\n}\n\nexport class ExpoRegistrationHandler extends RegistrationHandler {}\n"]}