{"version":3,"file":"ExpoRequestHandler.js","sourceRoot":"","sources":["../src/ExpoRequestHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AuthorizationError,\n  AuthorizationRequest,\n  AuthorizationRequestHandler,\n  AuthorizationRequestResponse,\n  AuthorizationResponse,\n  BasicQueryStringUtils,\n  Crypto,\n  log,\n  QueryStringUtils,\n  StringMap,\n  StorageBackend,\n  LocationLike,\n  AppAuthError,\n} from '@openid/appauth';\nimport * as WebBrowser from 'expo-web-browser';\nimport { Platform } from 'react-native';\nimport { URL } from './URL';\nimport { ExpoAuthorizationServiceConfiguration } from './ExpoAuthorizationServiceConfiguration';\nimport { ExpoCrypto } from './ExpoCrypto';\nimport { ExpoStorageBackend } from './ExpoStorage';\n\n/**\n * key for authorization request.\n */\nconst authorizationRequestKey = (handle: string) => {\n  return `${handle}_expo_appauth_authorization_request`;\n};\n\n/**\n * key for authorization service configuration\n */\nconst authorizationServiceConfigurationKey = (handle: string) => {\n  return `${handle}_expo_appauth_authorization_service_configuration`;\n};\n\n/**\n * key in local storage which represents the current authorization request.\n */\nconst AUTHORIZATION_REQUEST_HANDLE_KEY = 'expo_appauth_current_authorization_request';\n\nconst utils = new BasicQueryStringUtils();\n\nclass LocationLikeURL extends URL {\n  assign(url: string) {\n    // noop\n  }\n}\n\nexport class ExpoRequestHandler extends AuthorizationRequestHandler {\n  static createLocationLike = (url: string): LocationLike => {\n    return new LocationLikeURL(url);\n  };\n\n  static getQueryParams = (url: string): Record<string, string> => {\n    return utils.parseQueryString(new URL(url).search);\n  };\n\n  private request: AuthorizationRequest | null = null;\n  private authPromise?: Promise<void>;\n\n  constructor(\n    public locationLike: LocationLike = window.location,\n    public storageBackend: StorageBackend = new ExpoStorageBackend(),\n    utils: QueryStringUtils = new BasicQueryStringUtils(),\n    // @ts-ignore\n    crypto: Crypto = new ExpoCrypto()\n  ) {\n    super(utils, crypto);\n  }\n\n  performAuthorizationRequest(\n    configuration: any | ExpoAuthorizationServiceConfiguration,\n    request: AuthorizationRequest\n  ): void {\n    this.request = request;\n\n    this.authPromise = (async () => {\n      // Calling toJson() adds in the code & challenge when possible\n      const requestJson = await request.toJson();\n\n      if (this.request) {\n        this.request.state = requestJson.state!;\n      }\n\n      const handle = await this.crypto.generateRandom(10);\n\n      // before you make request, persist all request related data in local storage.\n      await Promise.all([\n        this.storageBackend.setItem(AUTHORIZATION_REQUEST_HANDLE_KEY, handle),\n        this.storageBackend.setItem(authorizationRequestKey(handle), JSON.stringify(requestJson)),\n        this.storageBackend.setItem(\n          authorizationServiceConfigurationKey(handle),\n          JSON.stringify(configuration.toJson())\n        ),\n      ]);\n\n      const url = this.buildRequestUrl(configuration, request);\n\n      log('Making an auth request to ', url);\n\n      if (Platform.OS === 'web') {\n        // TODO(Bacon): Use WebBrowser\n        this.locationLike.assign(url);\n        return;\n      }\n\n      const payload = await WebBrowser.openAuthSessionAsync(url, request.redirectUri);\n\n      if (payload.type === 'success') {\n        this.locationLike = new LocationLikeURL(payload.url);\n        return;\n      }\n\n      // There is no standard in the AppAuth-JS library for cancelling an auth flow\n      // This is an attempt to emulate the native error.\n      throw new AppAuthError(`User cancelled the authorization flow.`, {\n        // -3 is the iOS code for user dismissed.\n        code: -3,\n        // @ts-ignore: message is not on the type\n        message: payload.message,\n        type: payload.type,\n      });\n    })();\n  }\n\n  getQueryParams(): StringMap {\n    return this.utils.parse(this.locationLike, false /* don't use hash */);\n  }\n\n  async getOrRehydrateRequestAsync(): Promise<AuthorizationRequest | null> {\n    if (this.request) return this.request;\n    const handle = await this.storageBackend.getItem(AUTHORIZATION_REQUEST_HANDLE_KEY);\n    if (!handle) return null;\n    // we have a pending request.\n    // fetch authorization request, and check state\n    const request = await this.storageBackend\n      .getItem(authorizationRequestKey(handle))\n      // requires a corresponding instance of result\n      .then(result => JSON.parse(result!))\n      .then(json => new AuthorizationRequest(json));\n    this.request = request;\n    return request;\n  }\n\n  /**\n   * Attempts to introspect the contents of storage backend and completes the\n   * request.\n   */\n  protected async completeAuthorizationRequest(): Promise<AuthorizationRequestResponse | null> {\n    if (this.authPromise) await this.authPromise;\n    const handle = await this.storageBackend.getItem(AUTHORIZATION_REQUEST_HANDLE_KEY);\n    // we have a pending request.\n    // fetch authorization request, and check state\n    const request = await this.getOrRehydrateRequestAsync();\n    if (!handle || !request) return null;\n\n    const queryParams = this.getQueryParams();\n    const state: string | undefined = queryParams['state'];\n    const code: string | undefined = queryParams['code'];\n    const error: string | undefined = queryParams['error'];\n    // let error: string | undefined = queryParams['error'] ?? queryParams['errorCode'];\n    log('Potential authorization request ', queryParams, state, code, error);\n    const shouldNotify = state === request.state;\n    let authorizationResponse: AuthorizationResponse | null = null;\n    let authorizationError: AuthorizationError | null = null;\n\n    if (!shouldNotify) {\n      log('Mismatched request (state and request_uri) dont match.');\n      return null;\n    }\n\n    if (error) {\n      // get additional optional info.\n      const errorUri = queryParams['error_uri'];\n      const errorDescription = queryParams['error_description'];\n      authorizationError = new AuthorizationError({\n        error,\n        error_description: errorDescription,\n        error_uri: errorUri,\n        state,\n      });\n    } else {\n      authorizationResponse = new AuthorizationResponse({ code, state });\n    }\n\n    // cleanup state\n    await Promise.all([\n      this.storageBackend.removeItem(AUTHORIZATION_REQUEST_HANDLE_KEY),\n      this.storageBackend.removeItem(authorizationRequestKey(handle)),\n      this.storageBackend.removeItem(authorizationServiceConfigurationKey(handle)),\n    ]);\n\n    log('Delivering authorization response');\n    return {\n      request,\n      response: authorizationResponse,\n      error: authorizationError,\n    } as AuthorizationRequestResponse;\n  }\n}\n"]}