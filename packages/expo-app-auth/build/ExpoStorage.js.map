{"version":3,"file":"ExpoStorage.js","sourceRoot":"","sources":["../src/ExpoStorage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACjD,+CAA+C;AAE/C,IAAI,aAAkB,CAAC;AAEvB,IAAI;IACF,aAAa,GAAG,OAAO,CAAC,uCAAuC,CAAC,CAAC,OAAO,CAAC;CAC1E;AAAC,OAAO,CAAC,EAAE;IACV,aAAa,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC;CACtD;AAED;;GAEG;AACH,MAAM,OAAO,kBAAmB,SAAQ,cAAc;IAAtD;;QACU,YAAO,GAAG,aAAa,CAAC;IAkBlC,CAAC;IAhBQ,KAAK,CAAC,OAAO,CAAC,IAAY;QAC/B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/C,OAAO,KAAK,IAAI,IAAI,CAAC;IACvB,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,IAAY;QAClC,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAEM,KAAK,CAAC,KAAK;QAChB,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAEM,KAAK,CAAC,OAAO,CAAC,IAAY,EAAE,KAAa;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;CACF","sourcesContent":["import { StorageBackend } from '@openid/appauth';\n// import { AsyncStorage } from 'react-native';\n\nlet NativeStorage: any;\n\ntry {\n  NativeStorage = require('@react-native-community/async-storage').default;\n} catch (_) {\n  NativeStorage = require('react-native').AsyncStorage;\n}\n\n/**\n * A universal `StorageBackend` backed by Async Storage.\n */\nexport class ExpoStorageBackend extends StorageBackend {\n  private storage = NativeStorage;\n\n  public async getItem(name: string): Promise<string | null> {\n    const value = await this.storage.getItem(name);\n    return value ?? null;\n  }\n\n  public async removeItem(name: string): Promise<void> {\n    await this.storage.removeItem(name);\n  }\n\n  public async clear(): Promise<void> {\n    await this.storage.clear();\n  }\n\n  public async setItem(name: string, value: string): Promise<void> {\n    await this.storage.setItem(name, value);\n  }\n}\n"]}