{"version":3,"file":"ExpoAccessTokenRequest.js","sourceRoot":"","sources":["../src/ExpoAccessTokenRequest.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,6BAA6B,EAAa,MAAM,iBAAiB,CAAC;AAC3E,OAAO,SAAS,MAAM,WAAW,CAAC;AAClC,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAgBxC;;;GAGG;AACH,MAAM,OAAO,sBAAuB,SAAQ,gBAAgB;IAC1D,YAAY,OAAmC;QAC7C,SAAS,CACP,OAAO,CAAC,WAAW,EACnB,yEAAyE,QAAQ,CAAC,MAAM,CAAC;YACvF,GAAG,EAAE,0BAA0B;YAC/B,OAAO,EAAE,6BAA6B;SACvC,CAAC,EAAE,CACL,CAAC;QACF,KAAK,CAAC;YACJ,UAAU,EAAE,6BAA6B;YACzC,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,aAAa,EAAE,OAAO,CAAC,YAAY;YACnC,YAAY,EAAE,OAAO,CAAC,WAAW;YACjC,SAAS,EAAE,OAAO,CAAC,QAAQ;YAC3B,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,aAAa,EAAE,OAAO,CAAC,YAAY;YACnC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;YAC3E,aAAa,EAAE,OAAO,CAAC,YAAY;SACpC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import { GRANT_TYPE_AUTHORIZATION_CODE, StringMap } from '@openid/appauth';\nimport invariant from 'invariant';\nimport { ExpoTokenRequest } from './ExpoTokenRequest';\nimport { Platform } from 'react-native';\n\n/**\n * Represents the Token Request as user-friendly JSON.\n */\nexport interface ExpoAccessTokenRequestJson {\n  code?: string;\n  refreshToken?: string;\n  redirectUri: string;\n  clientId: string;\n  extras?: StringMap;\n  clientSecret?: string;\n  scopes?: string[];\n  codeVerifier?: string;\n}\n\n/**\n * Represents an access token request.\n * This is a utility class created for parity with `ExpoRevokeTokenRequest`.\n */\nexport class ExpoAccessTokenRequest extends ExpoTokenRequest {\n  constructor(options: ExpoAccessTokenRequestJson) {\n    invariant(\n      options.redirectUri,\n      `\\`ExpoAccessTokenRequest\\` requires a valid \\`redirectUri\\`. Example: ${Platform.select({\n        web: 'https://yourwebsite.com/',\n        default: 'com.your.app:/oauthredirect',\n      })}`\n    );\n    super({\n      grant_type: GRANT_TYPE_AUTHORIZATION_CODE,\n      code: options.code,\n      refresh_token: options.refreshToken,\n      redirect_uri: options.redirectUri,\n      client_id: options.clientId,\n      extras: options.extras,\n      client_secret: options.clientSecret,\n      scope: Array.isArray(options.scopes) ? options.scopes.join(' ') : undefined,\n      code_verifier: options.codeVerifier,\n    });\n  }\n}\n"]}